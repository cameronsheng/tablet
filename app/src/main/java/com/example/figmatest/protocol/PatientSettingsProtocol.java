// (c) IMT - Information Management Technology AG, CH-9470 Buchs, www.imt.ch.
// SW guideline: Technote Coding Guidelines Version. 1.5.1
//
// Generated by DffGenerator (Version 0.74.7)
// Generated from Engine.dff
//
// AUTO-GENERATED FILE. DO NOT MODIFY.

package com.example.figmatest.protocol;

import com.example.figmatest.imt.base.core.serialization.Deserializer;
import com.example.figmatest.imt.base.core.serialization.SerializableIfc;
import com.example.figmatest.imt.base.core.serialization.Serializer;

import java.util.Objects;

public final class PatientSettingsProtocol implements SerializableIfc {
    short patientType;
    short sex;
    short age;
    double idealWeight;
    double weight;
    double height;
    double bodyMassIndex;
    double bodyFatFraction;
    double bloodVolumeBaseline;
    double basalMetabolicRate;
    double heartRateBaseline;
    double systolicArterialPressureBaseline;
    double diastolicArterialPressureBaseline;
    double pulsePressureBaseline;
    double meanArterialPressure;
    double respirationRateBaseline;
    double alveoliSurfaceArea;
    double rightLungRatio;
    double skinSurfaceArea;
    double heartRateMaximum;
    double heartRateMinimum;
    double functionalResidualCapacity;
    double totalLungCapacity;
    double residualVolume;

    /**
     * Constructor.
     */
    public PatientSettingsProtocol(short patientType, short sex, short age, double idealWeight, 
        double weight, double height, double bodyMassIndex, double bodyFatFraction, double bloodVolumeBaseline, 
        double basalMetabolicRate, double heartRateBaseline, double systolicArterialPressureBaseline, double diastolicArterialPressureBaseline, double pulsePressureBaseline, 
        double meanArterialPressure, double respirationRateBaseline, double alveoliSurfaceArea, double rightLungRatio, double skinSurfaceArea, 
        double heartRateMaximum, double heartRateMinimum, double functionalResidualCapacity, double totalLungCapacity, double residualVolume)
    {
        this.patientType = patientType;
        this.sex = sex;
        this.age = age;
        this.idealWeight = idealWeight;
        this.weight = weight;
        this.height = height;
        this.bodyMassIndex = bodyMassIndex;
        this.bodyFatFraction = bodyFatFraction;
        this.bloodVolumeBaseline = bloodVolumeBaseline;
        this.basalMetabolicRate = basalMetabolicRate;
        this.heartRateBaseline = heartRateBaseline;
        this.systolicArterialPressureBaseline = systolicArterialPressureBaseline;
        this.diastolicArterialPressureBaseline = diastolicArterialPressureBaseline;
        this.pulsePressureBaseline = pulsePressureBaseline;
        this.meanArterialPressure = meanArterialPressure;
        this.respirationRateBaseline = respirationRateBaseline;
        this.alveoliSurfaceArea = alveoliSurfaceArea;
        this.rightLungRatio = rightLungRatio;
        this.skinSurfaceArea = skinSurfaceArea;
        this.heartRateMaximum = heartRateMaximum;
        this.heartRateMinimum = heartRateMinimum;
        this.functionalResidualCapacity = functionalResidualCapacity;
        this.totalLungCapacity = totalLungCapacity;
        this.residualVolume = residualVolume;
    }

    public PatientSettingsProtocol(Deserializer deserializer) {
        deserialize(deserializer);
    }

    @Override
    public int getMaxSerializedSize() {
        return 171;
    }

    @Override
    public void deserialize(Deserializer deserializer) {
        patientType = deserializer.readUInt8();
        sex = deserializer.readUInt8();
        age = deserializer.readUInt8();
        idealWeight = deserializer.readFloat64();
        weight = deserializer.readFloat64();
        height = deserializer.readFloat64();
        bodyMassIndex = deserializer.readFloat64();
        bodyFatFraction = deserializer.readFloat64();
        bloodVolumeBaseline = deserializer.readFloat64();
        basalMetabolicRate = deserializer.readFloat64();
        heartRateBaseline = deserializer.readFloat64();
        systolicArterialPressureBaseline = deserializer.readFloat64();
        diastolicArterialPressureBaseline = deserializer.readFloat64();
        pulsePressureBaseline = deserializer.readFloat64();
        meanArterialPressure = deserializer.readFloat64();
        respirationRateBaseline = deserializer.readFloat64();
        alveoliSurfaceArea = deserializer.readFloat64();
        rightLungRatio = deserializer.readFloat64();
        skinSurfaceArea = deserializer.readFloat64();
        heartRateMaximum = deserializer.readFloat64();
        heartRateMinimum = deserializer.readFloat64();
        functionalResidualCapacity = deserializer.readFloat64();
        totalLungCapacity = deserializer.readFloat64();
        residualVolume = deserializer.readFloat64();
    }

    @Override
    public void serialize(Serializer serializer) {
        serializer.writeUInt8(patientType);
        serializer.writeUInt8(sex);
        serializer.writeUInt8(age);
        serializer.writeFloat64(idealWeight);
        serializer.writeFloat64(weight);
        serializer.writeFloat64(height);
        serializer.writeFloat64(bodyMassIndex);
        serializer.writeFloat64(bodyFatFraction);
        serializer.writeFloat64(bloodVolumeBaseline);
        serializer.writeFloat64(basalMetabolicRate);
        serializer.writeFloat64(heartRateBaseline);
        serializer.writeFloat64(systolicArterialPressureBaseline);
        serializer.writeFloat64(diastolicArterialPressureBaseline);
        serializer.writeFloat64(pulsePressureBaseline);
        serializer.writeFloat64(meanArterialPressure);
        serializer.writeFloat64(respirationRateBaseline);
        serializer.writeFloat64(alveoliSurfaceArea);
        serializer.writeFloat64(rightLungRatio);
        serializer.writeFloat64(skinSurfaceArea);
        serializer.writeFloat64(heartRateMaximum);
        serializer.writeFloat64(heartRateMinimum);
        serializer.writeFloat64(functionalResidualCapacity);
        serializer.writeFloat64(totalLungCapacity);
        serializer.writeFloat64(residualVolume);
    }

    @Override
    public PatientSettingsProtocol deepClone() {
        return new PatientSettingsProtocol(
                patientType,
                sex,
                age,
                idealWeight,
                weight,
                height,
                bodyMassIndex,
                bodyFatFraction,
                bloodVolumeBaseline,
                basalMetabolicRate,
                heartRateBaseline,
                systolicArterialPressureBaseline,
                diastolicArterialPressureBaseline,
                pulsePressureBaseline,
                meanArterialPressure,
                respirationRateBaseline,
                alveoliSurfaceArea,
                rightLungRatio,
                skinSurfaceArea,
                heartRateMaximum,
                heartRateMinimum,
                functionalResidualCapacity,
                totalLungCapacity,
                residualVolume);
    }

    public short getPatientType() {
        return patientType;
    }

    public short getSex() {
        return sex;
    }

    public short getAge() {
        return age;
    }

    public double getIdealWeight() {
        return idealWeight;
    }

    public double getWeight() {
        return weight;
    }

    public double getHeight() {
        return height;
    }

    public double getBodyMassIndex() {
        return bodyMassIndex;
    }

    public double getBodyFatFraction() {
        return bodyFatFraction;
    }

    public double getBloodVolumeBaseline() {
        return bloodVolumeBaseline;
    }

    public double getBasalMetabolicRate() {
        return basalMetabolicRate;
    }

    public double getHeartRateBaseline() {
        return heartRateBaseline;
    }

    public double getSystolicArterialPressureBaseline() {
        return systolicArterialPressureBaseline;
    }

    public double getDiastolicArterialPressureBaseline() {
        return diastolicArterialPressureBaseline;
    }

    public double getPulsePressureBaseline() {
        return pulsePressureBaseline;
    }

    public double getMeanArterialPressure() {
        return meanArterialPressure;
    }

    public double getRespirationRateBaseline() {
        return respirationRateBaseline;
    }

    public double getAlveoliSurfaceArea() {
        return alveoliSurfaceArea;
    }

    public double getRightLungRatio() {
        return rightLungRatio;
    }

    public double getSkinSurfaceArea() {
        return skinSurfaceArea;
    }

    public double getHeartRateMaximum() {
        return heartRateMaximum;
    }

    public double getHeartRateMinimum() {
        return heartRateMinimum;
    }

    public double getFunctionalResidualCapacity() {
        return functionalResidualCapacity;
    }

    public double getTotalLungCapacity() {
        return totalLungCapacity;
    }

    public double getResidualVolume() {
        return residualVolume;
    }

    @Override
    public boolean equals(Object obj) {
        if ((obj == null) || !(obj instanceof PatientSettingsProtocol)) {
            return false;
        }
        if (obj == this) {
            return true;
        }
        final PatientSettingsProtocol other = (PatientSettingsProtocol) obj;
        return Objects.equals(this.patientType, other.patientType)
            && Objects.equals(this.sex, other.sex)
            && Objects.equals(this.age, other.age)
            && Objects.equals(this.idealWeight, other.idealWeight)
            && Objects.equals(this.weight, other.weight)
            && Objects.equals(this.height, other.height)
            && Objects.equals(this.bodyMassIndex, other.bodyMassIndex)
            && Objects.equals(this.bodyFatFraction, other.bodyFatFraction)
            && Objects.equals(this.bloodVolumeBaseline, other.bloodVolumeBaseline)
            && Objects.equals(this.basalMetabolicRate, other.basalMetabolicRate)
            && Objects.equals(this.heartRateBaseline, other.heartRateBaseline)
            && Objects.equals(this.systolicArterialPressureBaseline, other.systolicArterialPressureBaseline)
            && Objects.equals(this.diastolicArterialPressureBaseline, other.diastolicArterialPressureBaseline)
            && Objects.equals(this.pulsePressureBaseline, other.pulsePressureBaseline)
            && Objects.equals(this.meanArterialPressure, other.meanArterialPressure)
            && Objects.equals(this.respirationRateBaseline, other.respirationRateBaseline)
            && Objects.equals(this.alveoliSurfaceArea, other.alveoliSurfaceArea)
            && Objects.equals(this.rightLungRatio, other.rightLungRatio)
            && Objects.equals(this.skinSurfaceArea, other.skinSurfaceArea)
            && Objects.equals(this.heartRateMaximum, other.heartRateMaximum)
            && Objects.equals(this.heartRateMinimum, other.heartRateMinimum)
            && Objects.equals(this.functionalResidualCapacity, other.functionalResidualCapacity)
            && Objects.equals(this.totalLungCapacity, other.totalLungCapacity)
            && Objects.equals(this.residualVolume, other.residualVolume);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
            this.patientType, 
            this.sex, 
            this.age, 
            this.idealWeight, 
            this.weight, 
            this.height, 
            this.bodyMassIndex, 
            this.bodyFatFraction, 
            this.bloodVolumeBaseline, 
            this.basalMetabolicRate, 
            this.heartRateBaseline, 
            this.systolicArterialPressureBaseline, 
            this.diastolicArterialPressureBaseline, 
            this.pulsePressureBaseline, 
            this.meanArterialPressure, 
            this.respirationRateBaseline, 
            this.alveoliSurfaceArea, 
            this.rightLungRatio, 
            this.skinSurfaceArea, 
            this.heartRateMaximum, 
            this.heartRateMinimum, 
            this.functionalResidualCapacity, 
            this.totalLungCapacity, 
            this.residualVolume
        );
    }

    public static PatientSettingsProtocol.Builder builder() {
        return new Builder();
    }

    public static final class Builder {
        private PatientSettingsProtocol protocol;
        private short patientType;
        private short sex;
        private short age;
        private double idealWeight;
        private double weight;
        private double height;
        private double bodyMassIndex;
        private double bodyFatFraction;
        private double bloodVolumeBaseline;
        private double basalMetabolicRate;
        private double heartRateBaseline;
        private double systolicArterialPressureBaseline;
        private double diastolicArterialPressureBaseline;
        private double pulsePressureBaseline;
        private double meanArterialPressure;
        private double respirationRateBaseline;
        private double alveoliSurfaceArea;
        private double rightLungRatio;
        private double skinSurfaceArea;
        private double heartRateMaximum;
        private double heartRateMinimum;
        private double functionalResidualCapacity;
        private double totalLungCapacity;
        private double residualVolume;

        public Builder() {
        }

        /**
         * Constructor.
         */
        public Builder(PatientSettingsProtocol protocol) {
            if (protocol == null) {
                return;
            }
            this.patientType = protocol.patientType;
            this.sex = protocol.sex;
            this.age = protocol.age;
            this.idealWeight = protocol.idealWeight;
            this.weight = protocol.weight;
            this.height = protocol.height;
            this.bodyMassIndex = protocol.bodyMassIndex;
            this.bodyFatFraction = protocol.bodyFatFraction;
            this.bloodVolumeBaseline = protocol.bloodVolumeBaseline;
            this.basalMetabolicRate = protocol.basalMetabolicRate;
            this.heartRateBaseline = protocol.heartRateBaseline;
            this.systolicArterialPressureBaseline = protocol.systolicArterialPressureBaseline;
            this.diastolicArterialPressureBaseline = protocol.diastolicArterialPressureBaseline;
            this.pulsePressureBaseline = protocol.pulsePressureBaseline;
            this.meanArterialPressure = protocol.meanArterialPressure;
            this.respirationRateBaseline = protocol.respirationRateBaseline;
            this.alveoliSurfaceArea = protocol.alveoliSurfaceArea;
            this.rightLungRatio = protocol.rightLungRatio;
            this.skinSurfaceArea = protocol.skinSurfaceArea;
            this.heartRateMaximum = protocol.heartRateMaximum;
            this.heartRateMinimum = protocol.heartRateMinimum;
            this.functionalResidualCapacity = protocol.functionalResidualCapacity;
            this.totalLungCapacity = protocol.totalLungCapacity;
            this.residualVolume = protocol.residualVolume;
        }

        /**
         * Sets current values from existing protocol.
         */
        public void set(PatientSettingsProtocol protocol) {
            if (protocol == null) {
                return;
            }
            this.patientType = protocol.patientType;
            this.sex = protocol.sex;
            this.age = protocol.age;
            this.idealWeight = protocol.idealWeight;
            this.weight = protocol.weight;
            this.height = protocol.height;
            this.bodyMassIndex = protocol.bodyMassIndex;
            this.bodyFatFraction = protocol.bodyFatFraction;
            this.bloodVolumeBaseline = protocol.bloodVolumeBaseline;
            this.basalMetabolicRate = protocol.basalMetabolicRate;
            this.heartRateBaseline = protocol.heartRateBaseline;
            this.systolicArterialPressureBaseline = protocol.systolicArterialPressureBaseline;
            this.diastolicArterialPressureBaseline = protocol.diastolicArterialPressureBaseline;
            this.pulsePressureBaseline = protocol.pulsePressureBaseline;
            this.meanArterialPressure = protocol.meanArterialPressure;
            this.respirationRateBaseline = protocol.respirationRateBaseline;
            this.alveoliSurfaceArea = protocol.alveoliSurfaceArea;
            this.rightLungRatio = protocol.rightLungRatio;
            this.skinSurfaceArea = protocol.skinSurfaceArea;
            this.heartRateMaximum = protocol.heartRateMaximum;
            this.heartRateMinimum = protocol.heartRateMinimum;
            this.functionalResidualCapacity = protocol.functionalResidualCapacity;
            this.totalLungCapacity = protocol.totalLungCapacity;
            this.residualVolume = protocol.residualVolume;
        }

        public PatientSettingsProtocol.Builder patientType(short patientType) {
            this.patientType = patientType;
            return this;
        }

        public PatientSettingsProtocol.Builder sex(short sex) {
            this.sex = sex;
            return this;
        }

        public PatientSettingsProtocol.Builder age(short age) {
            this.age = age;
            return this;
        }

        public PatientSettingsProtocol.Builder idealWeight(double idealWeight) {
            this.idealWeight = idealWeight;
            return this;
        }

        public PatientSettingsProtocol.Builder weight(double weight) {
            this.weight = weight;
            return this;
        }

        public PatientSettingsProtocol.Builder height(double height) {
            this.height = height;
            return this;
        }

        public PatientSettingsProtocol.Builder bodyMassIndex(double bodyMassIndex) {
            this.bodyMassIndex = bodyMassIndex;
            return this;
        }

        public PatientSettingsProtocol.Builder bodyFatFraction(double bodyFatFraction) {
            this.bodyFatFraction = bodyFatFraction;
            return this;
        }

        public PatientSettingsProtocol.Builder bloodVolumeBaseline(double bloodVolumeBaseline) {
            this.bloodVolumeBaseline = bloodVolumeBaseline;
            return this;
        }

        public PatientSettingsProtocol.Builder basalMetabolicRate(double basalMetabolicRate) {
            this.basalMetabolicRate = basalMetabolicRate;
            return this;
        }

        public PatientSettingsProtocol.Builder heartRateBaseline(double heartRateBaseline) {
            this.heartRateBaseline = heartRateBaseline;
            return this;
        }

        public PatientSettingsProtocol.Builder systolicArterialPressureBaseline(double systolicArterialPressureBaseline) {
            this.systolicArterialPressureBaseline = systolicArterialPressureBaseline;
            return this;
        }

        public PatientSettingsProtocol.Builder diastolicArterialPressureBaseline(double diastolicArterialPressureBaseline) {
            this.diastolicArterialPressureBaseline = diastolicArterialPressureBaseline;
            return this;
        }

        public PatientSettingsProtocol.Builder pulsePressureBaseline(double pulsePressureBaseline) {
            this.pulsePressureBaseline = pulsePressureBaseline;
            return this;
        }

        public PatientSettingsProtocol.Builder meanArterialPressure(double meanArterialPressure) {
            this.meanArterialPressure = meanArterialPressure;
            return this;
        }

        public PatientSettingsProtocol.Builder respirationRateBaseline(double respirationRateBaseline) {
            this.respirationRateBaseline = respirationRateBaseline;
            return this;
        }

        public PatientSettingsProtocol.Builder alveoliSurfaceArea(double alveoliSurfaceArea) {
            this.alveoliSurfaceArea = alveoliSurfaceArea;
            return this;
        }

        public PatientSettingsProtocol.Builder rightLungRatio(double rightLungRatio) {
            this.rightLungRatio = rightLungRatio;
            return this;
        }

        public PatientSettingsProtocol.Builder skinSurfaceArea(double skinSurfaceArea) {
            this.skinSurfaceArea = skinSurfaceArea;
            return this;
        }

        public PatientSettingsProtocol.Builder heartRateMaximum(double heartRateMaximum) {
            this.heartRateMaximum = heartRateMaximum;
            return this;
        }

        public PatientSettingsProtocol.Builder heartRateMinimum(double heartRateMinimum) {
            this.heartRateMinimum = heartRateMinimum;
            return this;
        }

        public PatientSettingsProtocol.Builder functionalResidualCapacity(double functionalResidualCapacity) {
            this.functionalResidualCapacity = functionalResidualCapacity;
            return this;
        }

        public PatientSettingsProtocol.Builder totalLungCapacity(double totalLungCapacity) {
            this.totalLungCapacity = totalLungCapacity;
            return this;
        }

        public PatientSettingsProtocol.Builder residualVolume(double residualVolume) {
            this.residualVolume = residualVolume;
            return this;
        }

        /**
         * Builds the PatientSettingsProtocol object.
         */
        public PatientSettingsProtocol build() {
            protocol = new PatientSettingsProtocol(
                    patientType,
                    sex,
                    age,
                    idealWeight,
                    weight,
                    height,
                    bodyMassIndex,
                    bodyFatFraction,
                    bloodVolumeBaseline,
                    basalMetabolicRate,
                    heartRateBaseline,
                    systolicArterialPressureBaseline,
                    diastolicArterialPressureBaseline,
                    pulsePressureBaseline,
                    meanArterialPressure,
                    respirationRateBaseline,
                    alveoliSurfaceArea,
                    rightLungRatio,
                    skinSurfaceArea,
                    heartRateMaximum,
                    heartRateMinimum,
                    functionalResidualCapacity,
                    totalLungCapacity,
                    residualVolume);
            return protocol;
        }

        /**
         * Builds or updates the PatientSettingsProtocol object.
         */
        public PatientSettingsProtocol buildOrUpdate() {
            if (protocol == null) {
                return build();
            }
            protocol.patientType = this.patientType;
            protocol.sex = this.sex;
            protocol.age = this.age;
            protocol.idealWeight = this.idealWeight;
            protocol.weight = this.weight;
            protocol.height = this.height;
            protocol.bodyMassIndex = this.bodyMassIndex;
            protocol.bodyFatFraction = this.bodyFatFraction;
            protocol.bloodVolumeBaseline = this.bloodVolumeBaseline;
            protocol.basalMetabolicRate = this.basalMetabolicRate;
            protocol.heartRateBaseline = this.heartRateBaseline;
            protocol.systolicArterialPressureBaseline = this.systolicArterialPressureBaseline;
            protocol.diastolicArterialPressureBaseline = this.diastolicArterialPressureBaseline;
            protocol.pulsePressureBaseline = this.pulsePressureBaseline;
            protocol.meanArterialPressure = this.meanArterialPressure;
            protocol.respirationRateBaseline = this.respirationRateBaseline;
            protocol.alveoliSurfaceArea = this.alveoliSurfaceArea;
            protocol.rightLungRatio = this.rightLungRatio;
            protocol.skinSurfaceArea = this.skinSurfaceArea;
            protocol.heartRateMaximum = this.heartRateMaximum;
            protocol.heartRateMinimum = this.heartRateMinimum;
            protocol.functionalResidualCapacity = this.functionalResidualCapacity;
            protocol.totalLungCapacity = this.totalLungCapacity;
            protocol.residualVolume = this.residualVolume;
            return protocol;
        }
    }
}
